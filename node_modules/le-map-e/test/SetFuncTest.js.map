{"version":3,"sources":["SetFuncTest.es6"],"names":[],"mappings":"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","file":"SetFuncTest.js","sourcesContent":["/**\n *  le-map-e\n * Author: michael\n * Date: 19.09.15.\n * License: MIT\n */\n\n'use strict';\nconst assert = require('assert');\nconst should = require('chai').should();\nrequire('./../index');\ndescribe('SetFunc', function () {\n\n    describe('#last()', () => {\n        it('should get the last item from the set', done => {\n            let a = new Map([[1, 2]]);\n            let b = new Set([new Map([[2,3]]),'43']);\n            let c = b.last();\n            c.should.be.a('Set');\n            Array.from(c.keys())[0].should.equal('43');\n            done();\n        });\n    });\n\n    describe('#pop()', () => {\n        it('should get the last item from the set and remove it', done => {\n            let a = new Map([[1, 2]]);\n            let b = new Set([new Map([[2,3]]),'43']);\n            let c = b.pop();\n            c.should.be.a('Set');\n            Array.from(c.keys())[0].should.equal('43');\n            Array.from(b.keys()).should.deep.equal([new Map([[2,3]])]);\n            done();\n        });\n    });\n\n    describe('#deepMapAppendOrNew()', () => {\n        it('should add element to the set', done => {\n            let a = new Set();\n            a.deepMapAppendOrNew(3,4).deepMapAppendOrNew(5,7).deepMapAppendOrNew(5,9);\n            a.should.deep.equal(new Set ([ new Map([['a','b'],[3,4], [5,7]],new Map([[5,9]]))]));\n            done();\n        });\n    });\n});"]}