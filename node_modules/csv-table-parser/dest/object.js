"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const shape_1 = require("./shape");
exports.convertCsvToObject = (rows, options) => {
    const keys = exports.createKeys(rows, options);
    const createRow = exports.createObjectRowFactory(keys, options);
    return rows.reduce((stack, next, index) => {
        const values = next.split(options.separator);
        const rowDataObject = values.reduce(createRow, {});
        return exports.isIgnoreRowDataObject(keys, rowDataObject, options) ? stack : stack.concat(rowDataObject);
    }, []);
};
exports.createKeys = (rows, options) => {
    const { separator, keys: optionKeys, startColumn } = options;
    const isUsedOptionKeys = 0 < optionKeys.length;
    const keys = isUsedOptionKeys ? optionKeys : (rows.shift() || '').split(separator);
    return shape_1.trimUnnecessaryElement(keys, startColumn);
};
exports.isIgnoreRowDataObject = (keys, rowDataObject, options) => {
    const { defaultValue, ignoreRow, numberOfColumn } = options;
    const { emptyRow, lackElements } = ignoreRow;
    const needLength = numberOfColumn || keys.length;
    if (lackElements && Object.keys(rowDataObject).length < needLength)
        return true;
    if (emptyRow && Object.values(rowDataObject).every((elem) => elem === defaultValue))
        return true;
    return false;
};
exports.createObjectRowFactory = (keys, options) => {
    const { trim, startColumn } = options;
    return (obj, elem, index) => {
        if (shape_1.isNeededElement(options, index) === false) {
            return obj;
        }
        const actualHeaderIndex = index - startColumn;
        const key = trim ? shape_1.trimString(keys[actualHeaderIndex]) : keys[actualHeaderIndex];
        const value = trim ? shape_1.trimString(elem) : elem;
        obj[key] = shape_1.convertStringToCorrectType(value, options);
        return obj;
    };
};
